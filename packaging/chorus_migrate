#!/usr/bin/env bash
bin=`readlink "$0"`
if [ "$bin" == "" ]; then
 bin=$0
fi
bin=`dirname "$bin"`
bin=`cd "$bin"; pwd`

if [ -d $bin/current/packaging/ ]; then
    bin=$bin/current/packaging
fi

. "$bin"/chorus-config.sh

usage()
{
cat << EOF
usage: $0 options

  -s    legacy sql dump
  -w    workfile data directory (absolute)

EOF
}

SQL_DUMP=
WORKFILE_DIR=

while getopts “s:w:” OPTION
do
     case $OPTION in
         s)
             SQL_DUMP=$OPTARG
             ;;
         w)
             WORKFILE_DIR=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [[ -z $SQL_DUMP ]] || [[ -z $WORKFILE_DIR ]]
then
     usage
     exit 1
fi

$bin/start-postgres.sh

PGPASSFILE=$INSTALL_ROOT/.pgpass

# importing legacy sql
# The database must exist
log "Ensuring that application database exists..."
RAILS_ENV=$RAILS_ENV $RAKE db:create
DATABASE_NAME=chorus_rails_$RAILS_ENV
if [ "$RAILS_ENV" = "production" ]; then
  DATABASE_NAME=chorus
fi

set -e

PGPASSFILE=$PGPASSFILE psql     -p $POSTGRES_PORT -U postgres_chorus postgres -c 'drop database if exists chorus_tmp_migrate;'
PGPASSFILE=$PGPASSFILE psql     -p $POSTGRES_PORT -U postgres_chorus $DATABASE_NAME -c 'drop schema if exists legacy_migrate cascade'

# Create a temporary database so we can namespace legacy tables into their own schema
PGPASSFILE=$PGPASSFILE createdb -p $POSTGRES_PORT -U postgres_chorus chorus_tmp_migrate
PGPASSFILE=$PGPASSFILE psql     -p $POSTGRES_PORT -U postgres_chorus chorus_tmp_migrate < $SQL_DUMP > /dev/null
PGPASSFILE=$PGPASSFILE psql     -p $POSTGRES_PORT -U postgres_chorus chorus_tmp_migrate -c 'alter schema public rename to legacy_migrate'

# Pipe the output of pg_dump into the chorus_rails db, namespaced under legacy_migrate
PGPASSFILE=$PGPASSFILE pg_dump --ignore-version -p $POSTGRES_PORT -U postgres_chorus chorus_tmp_migrate | PGPASSFILE=$PGPASSFILE psql -p $POSTGRES_PORT -U postgres_chorus $DATABASE_NAME > /dev/null

# running the migration

cd $RELEASE_PATH
log "Using Chorus 2.1 sql dump: $SQL_DUMP"
log "Using Chorus 2.1 workfile directory: $WORKFILE_DIR"
RAILS_ENV=$RAILS_ENV $RUBY script/rails runner "DataMigrator.migrate_all('$WORKFILE_DIR')"
log "Migration finished."